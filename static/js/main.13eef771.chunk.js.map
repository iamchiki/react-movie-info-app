{"version":3,"sources":["store/movie-context.js","components/UI/ButtonComponent.js","components/UI/Input.js","components/UI/SearchForm.js","components/HeaderComponent.js","components/UI/Error.js","components/MovieDetail.js","components/MovieCard.js","components/MovieSection.js","components/UI/Spinner.js","App.js","store/MovieCtxProvider.js","index.js","components/UI/Spinner.module.css"],"names":["MovieContext","React","createContext","movieList","showMovieDtl","showMovieList","diaplayMovies","movies","displayMovieInfo","obj","movieInfo","isLoading","setRequestStatus","requestStatus","error","showError","message","ButtonComponent","props","className","type","children","Input","forwardRef","ref","placeholder","SearchForm","inputRef","createRef","movieCtx","useContext","fetchMovies","queryText","a","fetch","response","json","Error","Search","statusType","onSubmit","e","preventDefault","current","value","HeaderComponent","MovieDetail","svg","width","height","xmlns","role","preserveAspectRatio","focusable","fill","x","y","dy","image","src","movieObj","Poster","alt","Fragment","Title","Genre","Released","imdbRating","Director","Writer","Actors","Language","Plot","MovieCard","fetchMovieDetail","id","movieItem","Year","onClick","imdbID","MovieSection","movieCardList","map","movie","Spinner","classes","spinner","App","defaultState","showMovieInfo","showMovieSection","movieReducer","state","action","payload","MovieCtxProvider","useReducer","movieState","dispatch","defaultValues","movieDtl","Provider","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.13eef771.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst MovieContext = React.createContext({\r\n  movieList: [],\r\n  showMovieDtl: false,\r\n  showMovieList: false,\r\n  diaplayMovies: (movies) => {},\r\n  displayMovieInfo: (obj) => {},\r\n  movieInfo: null,\r\n  isLoading: false,\r\n  setRequestStatus: (requestStatus) => {},\r\n  error: {\r\n    showError: false,\r\n    message: null,\r\n  },\r\n});\r\n\r\nexport default MovieContext;\r\n","import React from 'react';\r\n\r\nconst ButtonComponent = (props) => {\r\n  return (\r\n    <button className='btn btn-outline-light' type='submit'>\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ButtonComponent;\r\n","import React from 'react';\r\n\r\nconst Input = React.forwardRef((props, ref) => {\r\n  return (\r\n    <input\r\n      className='form-control form-control-dark mr-lg-3'\r\n      type='search'\r\n      placeholder='Enter Movie Name'\r\n      aria-label='Search'\r\n      ref={ref}\r\n    />\r\n  );\r\n});\r\n\r\nexport default Input;\r\n","import React, { useContext } from 'react';\r\nimport MovieContext from '../../store/movie-context';\r\nimport ButtonComponent from './ButtonComponent';\r\nimport Input from './Input';\r\n\r\nconst API_KEY = '3b8cf2cb&s';\r\n\r\nconst SearchForm = (props) => {\r\n  const inputRef = React.createRef();\r\n  const movieCtx = useContext(MovieContext);\r\n\r\n  const fetchMovies = async (queryText) => {\r\n    try {\r\n      const response = await fetch(\r\n        `https://www.omdbapi.com/?apikey=${API_KEY}=${queryText}`\r\n      );\r\n      const movies = await response.json();\r\n      if (movies.Error) {\r\n        throw new Error(movies.Error);\r\n      }\r\n      movieCtx.movieList = [...movies.Search];\r\n      movieCtx.diaplayMovies(movieCtx.movieList);\r\n    } catch (error) {\r\n      movieCtx.setRequestStatus({\r\n        statusType: 'error',\r\n        message: error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    movieCtx.setRequestStatus({ statusType: 'pending' });\r\n    fetchMovies(inputRef.current.value);\r\n  };\r\n\r\n  return (\r\n    <form\r\n      className='col-12 col-lg-auto d-flex flex-column flex-lg-row'\r\n      onSubmit={submitHandler}>\r\n      <Input ref={inputRef}></Input>\r\n      <div className='align-self-center mt-3 mt-lg-0'>\r\n        <ButtonComponent>Search</ButtonComponent>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SearchForm;\r\n","import React from 'react';\r\nimport SearchForm from './UI/SearchForm';\r\n\r\nconst HeaderComponent = () => {\r\n  return (\r\n    <header className='sticky-top p-3 bg-dark text-white'>\r\n      <div className='container'>\r\n        <div className='d-flex flex-wrap align-items-center'>\r\n          <h3 className='nav col-12 col-lg-auto mr-lg-auto mb-3 mb-lg-0 justify-content-center'>\r\n            Movie Info App\r\n          </h3>\r\n          <SearchForm></SearchForm>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default HeaderComponent;\r\n","import React from 'react';\r\n\r\nconst Error = (props) => {\r\n  return (\r\n    <div className='centered'>\r\n      <h2>{props.message}</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Error;\r\n","import React from 'react';\r\n\r\nconst MovieDetail = (props) => {\r\n  const svg = (\r\n    <svg\r\n      className='img-fluid svg-text-centered'\r\n      width='100%'\r\n      height='225'\r\n      xmlns='http://www.w3.org/2000/svg'\r\n      role='img'\r\n      aria-label='Placeholder: Thumbnail'\r\n      preserveAspectRatio='xMidYMid slice'\r\n      focusable='false'>\r\n      <title>Placeholder</title>\r\n      <rect width='100%' height='100%' fill='#55595c' />\r\n      <text x='50%' y='50%' fill='#eceeef' dy='.3em'>\r\n        Image Not Found\r\n      </text>\r\n    </svg>\r\n  );\r\n\r\n  const image = (\r\n    <img src={props.movieObj.Poster} alt='' className='img-fluid' />\r\n  );\r\n  return (\r\n    <React.Fragment>\r\n      <div className='container-md movie-font'>\r\n        <div className='card card-block flex-md-row my-5 mx-sm-5 shadow-sm'>\r\n          {props.movieObj.Poster === 'N/A' ? svg : image}\r\n          <div className='card-body'>\r\n            <h4 className='card-title'>{props.movieObj.Title}</h4>\r\n            <ul className='list-group shadow-sm'>\r\n              <li className='list-group-item'>{`Genre: ${props.movieObj.Genre}`}</li>\r\n              <li className='list-group-item'>{`Released: ${props.movieObj.Released}`}</li>\r\n              <li className='list-group-item'>{`IMDB Rating: ${props.movieObj.imdbRating}`}</li>\r\n              <li className='list-group-item'>{`Director: ${props.movieObj.Director}`}</li>\r\n              <li className='list-group-item'>{`Writer: ${props.movieObj.Writer}`}</li>\r\n              <li className='list-group-item'>{`Actors: ${props.movieObj.Actors}`}</li>\r\n              <li className='list-group-item'>{`Language: ${props.movieObj.Language}`}</li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <div className='card my-5 mx-sm-5 shadow-sm'>\r\n          <div className='card-body'>\r\n            <h4 className='card-title'>Plot</h4>\r\n            <p>{props.movieObj.Plot}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default MovieDetail;\r\n","import React, { useContext } from 'react';\r\nimport MovieContext from '../store/movie-context';\r\n\r\nconst MovieCard = (props) => {\r\n  const movieCtx = useContext(MovieContext);\r\n\r\n  const fetchMovieDetail = async (id) => {\r\n    const response = await fetch(\r\n      `https://www.omdbapi.com/?apikey=3b8cf2cb&i=${id}`\r\n    );\r\n    const movieInfo = await response.json();\r\n    movieCtx.movieInfo = movieInfo;\r\n    movieCtx.displayMovieInfo(movieCtx.movieInfo);\r\n  };\r\n\r\n  const movieDetailHandler = () => {\r\n    movieCtx.setRequestStatus({ statusType: 'pending' });\r\n    fetchMovieDetail(props.movieItem.imdbID);\r\n  };\r\n\r\n  const svg = (\r\n    <svg\r\n      className='card-img-top card-img svg-text-centered'\r\n      width='100%'\r\n      height='225'\r\n      xmlns='http://www.w3.org/2000/svg'\r\n      role='img'\r\n      aria-label='Placeholder: Thumbnail'\r\n      preserveAspectRatio='xMidYMid slice'\r\n      focusable='false'>\r\n      <title>Placeholder</title>\r\n      <rect width='100%' height='100%' fill='#55595c' />\r\n      <text x='50%' y='50%' fill='#eceeef' dy='.3em'>\r\n        Image Not Found\r\n      </text>\r\n    </svg>\r\n  );\r\n\r\n  const image = (\r\n    <img\r\n      src={props.movieItem.Poster}\r\n      alt=''\r\n      className='card-img-top card-img'\r\n    />\r\n  );\r\n  return (\r\n    <div className='card h-100 shadow-sm'>\r\n      {props.movieItem.Poster === 'N/A' ? svg : image}\r\n      <div className='card-body'>\r\n        <h5 className='card-title'>{props.movieItem.Title}</h5>\r\n        <p className='card-text'>Release Year: {props.movieItem.Year}</p>\r\n        <div className='d-flex justify-content-between align-items-center'>\r\n          <div className='btn-group'>\r\n            <button\r\n              type='button'\r\n              onClick={movieDetailHandler}\r\n              className='btn btn-sm btn-outline-secondary'>\r\n              View\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieCard;\r\n","import React, { useContext } from 'react';\r\nimport MovieContext from '../store/movie-context';\r\nimport MovieCard from './MovieCard';\r\n\r\nconst MovieSection = () => {\r\n  const movieCtx = useContext(MovieContext);\r\n\r\n  const movieCardList = movieCtx.movieList.map((movie) => {\r\n    return (\r\n      <div key={movie.imdbID} className='col mt-3'>\r\n        <MovieCard movieItem={movie}></MovieCard>\r\n      </div>\r\n    );\r\n  });\r\n  return (\r\n    <div className='album py-5'>\r\n      <div className='container'>\r\n        <div className='row row-cols-1 row-cols-sm-2 row-cols-md-3 justify-content-center justify-content-sm-start'>\r\n          {movieCardList}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieSection;\r\n","import React from 'react';\r\nimport classes from './Spinner.module.css';\r\n\r\nconst Spinner = () => {\r\n  return <div className={classes.spinner}></div>;\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { useContext } from 'react';\r\nimport HeaderComponent from './components/HeaderComponent';\r\nimport Error from './components/UI/Error';\r\nimport MovieDetail from './components/MovieDetail';\r\nimport MovieSection from './components/MovieSection';\r\nimport Spinner from './components/UI/Spinner';\r\nimport MovieContext from './store/movie-context';\r\n\r\nfunction App() {\r\n  const movieCtx = useContext(MovieContext);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <HeaderComponent></HeaderComponent>\r\n      {movieCtx.isLoading && (\r\n        <div className='centered'>\r\n          <Spinner></Spinner>\r\n        </div>\r\n      )}\r\n      {movieCtx.showMovieList && <MovieSection></MovieSection>}\r\n      {movieCtx.showMovieDtl && (\r\n        <MovieDetail movieObj={movieCtx.movieInfo}></MovieDetail>\r\n      )}\r\n      {movieCtx.error.showError && (\r\n        <Error message={movieCtx.error.message}></Error>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React, { useReducer } from 'react';\r\nimport MovieContext from './movie-context';\r\n\r\nconst defaultState = {\r\n  showMovieInfo: false,\r\n  showMovieSection: false,\r\n  isLoading: false,\r\n  movieList: [],\r\n  movieInfo: null,\r\n  error: {\r\n    showError: false,\r\n    message: null,\r\n  },\r\n};\r\n\r\nconst movieReducer = (state, action) => {\r\n  if (action.type === 'movie-section') {\r\n    return {\r\n      ...defaultState,\r\n      showMovieInfo: false,\r\n      showMovieSection: true,\r\n      isLoading: false,\r\n      movieList: action.payload,\r\n    };\r\n  } else if (action.type === 'movie-info') {\r\n    return {\r\n      ...defaultState,\r\n      showMovieInfo: true,\r\n      showMovieSection: false,\r\n      isLoading: false,\r\n      movieInfo: action.payload,\r\n    };\r\n  } else if (action.type === 'pending') {\r\n    return {\r\n      ...defaultState,\r\n      isLoading: true,\r\n    };\r\n  } else if (action.type === 'error') {\r\n    return {\r\n      ...defaultState,\r\n      error: {\r\n        showError: true,\r\n        message: action.payload,\r\n      },\r\n    };\r\n  }\r\n};\r\n\r\nconst MovieCtxProvider = (props) => {\r\n  const [movieState, dispatch] = useReducer(movieReducer, defaultState);\r\n\r\n  const displayMovies = (movies) => {\r\n    dispatch({ type: 'movie-section', payload: movies });\r\n  };\r\n\r\n  const displayMovieInfo = (movieDtl) => {\r\n    dispatch({ type: 'movie-info', payload: movieDtl });\r\n  };\r\n\r\n  const setRequestStatus = (requestStatus) => {\r\n    dispatch({\r\n      type: requestStatus.statusType,\r\n      payload: requestStatus.message,\r\n    });\r\n  };\r\n\r\n  const defaultValues = {\r\n    movieList: movieState.movieList,\r\n    showMovieDtl: movieState.showMovieInfo,\r\n    showMovieList: movieState.showMovieSection,\r\n    diaplayMovies: displayMovies,\r\n    displayMovieInfo: displayMovieInfo,\r\n    movieInfo: movieState.movieInfo,\r\n    isLoading: movieState.isLoading,\r\n    setRequestStatus: setRequestStatus,\r\n    error: movieState.error,\r\n  };\r\n  return (\r\n    <MovieContext.Provider value={defaultValues}>\r\n      {props.children}\r\n    </MovieContext.Provider>\r\n  );\r\n};\r\n\r\nexport default MovieCtxProvider;\r\n","import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport './styles.css';\r\nimport App from './App';\r\nimport MovieCtxProvider from './store/MovieCtxProvider';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <MovieCtxProvider>\r\n      <App />\r\n    </MovieCtxProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"Spinner_spinner__pp2Jt\"};"],"sourceRoot":""}